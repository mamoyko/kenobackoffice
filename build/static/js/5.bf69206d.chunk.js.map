{"version":3,"sources":["app/pages/home/player/components/PlayerBetComponent.js","../node_modules/react-bootstrap/esm/InputGroup.js","app/pages/home/player/components/PlayerDetailComponent.js","app/pages/home/player/components/PlayerInput.js","app/pages/home/player/components/PlayerViewComponent.js","app/pages/home/player/PlayerComponent.js","app/crud/player.crud.js","app/crud/bet.crud.js","app/partials/shared/Modal.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js"],"names":["PlayerBetComponent","props","useState","state","setState","player_id","id","reRender","useEffect","a","getBetByPlayer","response","data","map","o","active","push","columns","title","field","render","rowData","player","name","firstName","lastName","draw","reward","keno_played","item","hit_count","moment","date_created","format","fetchData","InputGroup","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","Component","createElement","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","leads","PlayerDetailComponent","playerId","setPlayerId","_id","middleName","username","email","phone","balance","currency","affiliate","street","unitNo","city","province","country","postalCode","input","setInput","setRerender","getPlayerById","match","params","upPlayer","handleChange","e","target","value","handleSubmitPlayer","preventDefault","obj","address","updatePlayer","success","message","toast","error","Container","fluid","Row","Portlet","fluidHeight","toolbar","style","flexDirection","display","Col","xs","TextField","onChange","label","variant","InputLabelProps","shrink","fullWidth","required","disabled","select","option","MenuItem","key","leadSourceName","Button","color","onClick","align","CircularProgress","BusinessInput","onSubmit","handleSubmit","password","PlayerViewComponent","initialInput","isModalOpen","setIsModalOpen","isUpdate","setIsUpdate","notify","getPlayer","width","to","delPlayer","handleSubmitBusiness","addPlayer","deletePlayer","open","handleClose","PlayerInput","console","log","PlayerComponent","exact","from","path","component","API_URL","process","PLAYER","axios","get","getPlayerByAffiliate","post","patch","delete","getBet","ModalTable","dialogClassName","show","onHide","centered","Header","closeButton","Title","Body","children","noGutters","_props$as","otherProps","decoratedBsPrefix","defaultProps","DEVICE_SIZES","prefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","length","apply","concat"],"mappings":"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","file":"static/js/5.bf69206d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { getBetByPlayer } from '../../../../crud/bet.crud';\r\nimport * as moment from 'moment'\r\n\r\nconst PlayerBetComponent = (props) => {\r\n  const [state, setState] = useState(0);\r\n\r\n  let player_id = props.id;\r\n\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n    const response = await getBetByPlayer(player_id);\r\n    let data = [];\r\n    response.data.map(o => (o.active === true ? data.push(o) : null));\r\n    setState({\r\n      columns: [\r\n        { title: 'Transaction id', field: 'transaction_id'},\r\n        { title: 'Player name', field: 'player',\r\n            render: rowData => `${rowData.player.name.firstName} ${rowData.player.name.lastName}`\r\n        },\r\n        { title: 'Bet Amount', field: 'betAmount'},\r\n        { title: 'Win Amount', field: 'draw',\r\n          render: rowData => `${rowData.draw.reward}`\r\n        },\r\n        { title: 'Bet Table', field: 'draw',\r\n            render: rowData => rowData.draw.keno_played.map((item) => `${item} `)\r\n        },\r\n        { title: 'Table Results', field: 'draw',\r\n          render: rowData => rowData.draw.keno_played.map((item) => `${item} `)\r\n        },\r\n        { title: 'Hit Count', field: 'draw',\r\n            render: rowData => rowData.draw.hit_count\r\n        },\r\n        { title: 'Date', field: 'date_created',\r\n          render: rowData => moment(rowData.date_created).format('LLLL')\r\n        }\r\n      ],\r\n        data: data\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  return (\r\n      <>\r\n        {state.data && (\r\n            <>\r\n            <MaterialTable\r\n                title='Player Bet Details'\r\n                columns={state.columns}\r\n                data={state.data}\r\n            />\r\n            </>\r\n        )}\r\n      </>\r\n  );\r\n};\r\n\r\nexport default PlayerBetComponent;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\n\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Portlet,\r\n  PortletBody,\r\n  PortletHeader,\r\n  PortletHeaderToolbar\r\n} from \"../../../../partials/content/Portlet\";\r\nimport { getPlayerById, updatePlayer } from '../../../../crud/player.crud';\r\nimport PlayerBetComponent from './PlayerBetComponent';\r\nimport { Button, CircularProgress,TextField, MenuItem } from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst leads = [\r\n  {\r\n    \"id\": 1,\r\n    \"leadSourceName\": \"Lead 1\",\r\n    \"leadStatusName\": \"Lead 1\"\r\n  },\r\n  {\r\n      \"id\": 2,\r\n      \"leadSourceName\": \"Lead 2\",\r\n      \"leadStatusName\": \"Lead 2\"\r\n  },\r\n  {\r\n      \"id\": 3,\r\n      \"leadSourceName\": \"Lead 3\",\r\n      \"leadStatusName\": \"Lead 3\"\r\n  },\r\n  {\r\n      \"id\": 4,\r\n      \"leadSourceName\": \"Lead 4\",\r\n      \"leadStatusName\": \"Lead 5\"\r\n  }\r\n];\r\n\r\nconst PlayerDetailComponent = (props) => {\r\n  const [playerId, setPlayerId] = useState(0);\r\n\r\n  const initialInput = {\r\n    _id: '',\r\n    firstName: '',\r\n    middleName: '',\r\n    lastName: '',\r\n    username: '',\r\n    email: '',\r\n    phone: '',\r\n    balance: '',\r\n    currency: 'USD',\r\n    affiliate: '',\r\n    street: '',\r\n    unitNo: '',\r\n    city: '',\r\n    province: '',\r\n    country: '',\r\n    postalCode: ''\r\n  };\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  const notify = data => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        const response = await getPlayerById(props.match.params.id);\r\n        setPlayerId({id: response.data.data._id});\r\n        upPlayer(response.data.data);\r\n    };\r\n    fetchData();\r\n  },[]);\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id ? e.target.id : e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitPlayer = async e => {\r\n    e.preventDefault();\r\n\r\n    let obj = {\r\n      _id: input._id,\r\n      name: {\r\n          firstName: input.firstName,\r\n          middleName: input.middleName,\r\n          lastName: input.lastName\r\n      },\r\n      email: input.email,\r\n      username: input.username,\r\n      phone: input.phone,\r\n      balance: input.balance,\r\n      currency: input.currency,\r\n      affiliate : input.affiliate,\r\n      address: {\r\n        street: input.street,\r\n        unitNo: input.unitNo,\r\n        city: input.city,\r\n        province: input.province,\r\n        country: input.country,\r\n        postalCode: input.postalCode\r\n      }\r\n    }\r\n\r\n    try {\r\n      await updatePlayer(obj);\r\n      notify({ success: true, message: 'Success updating business.' });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const upPlayer = data => {\r\n    setInput({\r\n        _id : data ? data._id : '',\r\n        firstName: data.name ? data.name.firstName : '',\r\n        middleName: data.name ? data.name.middleName : '',\r\n        lastName: data.name ? data.name.lastName : '',\r\n        email: data.email ? data.email : '',\r\n        username: data.username ? data.username : '',\r\n        phone: data.phone ? data.phone : '',\r\n        balance: data.balance ? data.balance : '',\r\n        currency: data.currency ? data.currency : '',\r\n        affiliate: data.affiliate ? data.affiliate : '',\r\n        street: data.address ? data.address.street : '',\r\n        unitNo: data.address ? data.address.unitNo : '',\r\n        city: data.address ? data.address.city : '',\r\n        province: data.address ? data.address.province : '',\r\n        country: data.address ? data.address.country : '',\r\n        postalCode: data.address ? data.address.postalCode : ''\r\n    });\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Container fluid>\r\n      <ToastContainer />\r\n        <Row>\r\n          <Portlet fluidHeight={true}>\r\n            <PortletHeader\r\n              title=\"Player Details\"\r\n              toolbar={\r\n                <PortletHeaderToolbar>\r\n                </PortletHeaderToolbar>\r\n              }\r\n            />\r\n            <PortletBody>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                 <Col xs={6}>\r\n                  <InputGroup className='mb-4'>\r\n                    <TextField\r\n                    onChange={handleChange}\r\n                    value={input.firstName}\r\n                    id='firstName'\r\n                    type='text'\r\n                    label='First Name'\r\n                    className=''\r\n                    variant='outlined'\r\n                    InputLabelProps={{\r\n                      shrink: true\r\n                    }}\r\n                    size='small'\r\n                    fullWidth={true}\r\n                    required\r\n                  />\r\n              </InputGroup>\r\n          </Col>\r\n                  <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={handleChange}\r\n                        value={input.middleName}\r\n                        id='middleName'\r\n                        type='text'\r\n                        label='Middle Name'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n          </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={handleChange}\r\n                        id='lastName'\r\n                        value={input.lastName}\r\n                        type='text'\r\n                        label='Last Name'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={handleChange}\r\n                        value={input.username}\r\n                        id='username'\r\n                        type='text'\r\n                        label='Username'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={handleChange}\r\n                        value={input.email}\r\n                        id='email'\r\n                        type='text'\r\n                        label='Email'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={handleChange}\r\n                        value={input.phone}\r\n                        id='phone'\r\n                        type='text'\r\n                        label='Phone'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={handleChange}\r\n                        value={input.balance}\r\n                        id='balance'\r\n                        type='text'\r\n                        label='Balance'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={handleChange}\r\n                        value={input.currency}\r\n                        id='currency'\r\n                        type='text'\r\n                        label='Currency'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        disabled\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={12}>\r\n                    <InputGroup className='mb-4'>\r\n                        {/* <TextField\r\n                        onChange={handleChange}\r\n                        value={input.affiliate}\r\n                        id='affiliate'\r\n                        type='text'\r\n                        label='Affiliate'\r\n                        className=''\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        /> */}\r\n                        <TextField\r\n                            onChange={handleChange}\r\n                            select\r\n                            id=\"affiliate\"\r\n                            name=\"affiliate\"\r\n                            label='Affiliate'\r\n                            className=''\r\n                            value={input.affiliate}\r\n                            variant='outlined'\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            size='small'\r\n                            fullWidth={true}\r\n                        >\r\n                            {leads.map((option) => (\r\n                                <MenuItem key={option.id} value={option.id}>\r\n                                    {option.leadSourceName}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </InputGroup>\r\n                </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={handleChange}\r\n                  value={input.street}\r\n                  id='street'\r\n                  type='text'\r\n                  label='Street'\r\n                  className=''\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n                <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={handleChange}\r\n                  value={input.unitNo}\r\n                  id='unitNo'\r\n                  type='text'\r\n                  label='Unit No'\r\n                  className=''\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={handleChange}\r\n                  value={input.city}\r\n                  id='city'\r\n                  type='text'\r\n                  label='City'\r\n                  className=''\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n                <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={handleChange}\r\n                  value={input.province}\r\n                  id='province'\r\n                  type='text'\r\n                  label='Province'\r\n                  className=''\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={handleChange}\r\n                  value={input.country}\r\n                  id='country'\r\n                  type='text'\r\n                  label='Country'\r\n                  className=''\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n                <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={handleChange}\r\n                  value={input.postalCode}\r\n                  id='postalCode'\r\n                  type='text'\r\n                  label='PostalCode'\r\n                  className=''\r\n\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              </div>\r\n              <div style={{flexDirection:\"row\",display:\"flex\"}}>\r\n                <Col xs={12}>\r\n                <Button\r\n                    type='button'\r\n                    size='large'\r\n                    className='float-right'\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={handleSubmitPlayer}\r\n                    >\r\n                    Save\r\n                    </Button>\r\n                </Col>\r\n              </div>\r\n            </PortletBody>\r\n          </Portlet>\r\n        </Row>\r\n    </Container>\r\n    <Container fluid>\r\n    {playerId.id ? (\r\n        <>\r\n        <PlayerBetComponent id={ playerId.id }/>\r\n        </>\r\n      ) : (\r\n        <div align='center'>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayerDetailComponent;\r\n","import React from 'react';\r\nimport { TextField, Button, MenuItem  } from '@material-ui/core';\r\nimport { Container, InputGroup, Row, Col, Form } from 'react-bootstrap';\r\n\r\nconst leads = [\r\n    {\r\n      \"id\": 1,\r\n      \"leadSourceName\": \"Lead 1\",\r\n      \"leadStatusName\": \"Lead 1\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"leadSourceName\": \"Lead 2\",\r\n        \"leadStatusName\": \"Lead 2\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"leadSourceName\": \"Lead 3\",\r\n        \"leadStatusName\": \"Lead 3\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"leadSourceName\": \"Lead 4\",\r\n        \"leadStatusName\": \"Lead 5\"\r\n    }\r\n];\r\n\r\nconst BusinessInput = props => {\r\n  return (\r\n    <Container>\r\n      <form onSubmit={props.handleSubmit}>\r\n\r\n            <Row>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='firstName'\r\n                        type='text'\r\n                        label='First Name'\r\n                        className=''\r\n                        value={props.data.firstName}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='middleName'\r\n                        type='text'\r\n                        label='Middle Name'\r\n                        className=''\r\n                        value={props.data.middleName}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='lastName'\r\n                        type='text'\r\n                        label='Last Name'\r\n                        className=''\r\n                        value={props.data.lastName}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='username'\r\n                        type='text'\r\n                        label='Username'\r\n                        className=''\r\n                        value={props.data.username}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='password'\r\n                        type='text'\r\n                        label='Password'\r\n                        className=''\r\n                        value={props.data.password}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='email'\r\n                        type='text'\r\n                        label='Email'\r\n                        className=''\r\n                        value={props.data.email}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='phone'\r\n                        type='text'\r\n                        label='Phone'\r\n                        className=''\r\n                        value={props.data.phone}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        required\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='balance'\r\n                        type='text'\r\n                        label='Balance'\r\n                        className=''\r\n                        value={props.data.balance}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                        onChange={props.handleChange}\r\n                        id='currency'\r\n                        type='text'\r\n                        label='Currency'\r\n                        className=''\r\n                        value={props.data.currency}\r\n                        variant='outlined'\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        disabled\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <InputGroup className='mb-4'>\r\n                        <TextField\r\n                            onChange={props.handleChange}\r\n                            select\r\n                            id=\"affiliate\"\r\n                            name=\"affiliate\"\r\n                            label='Affiliate'\r\n                            className=''\r\n                            value={props.data.affiliate}\r\n                            variant='outlined'\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            size='small'\r\n                            fullWidth={true}\r\n                        >\r\n                            {leads.map((option) => (\r\n                                <MenuItem key={option.id} value={option.id}>\r\n                                    {option.leadSourceName}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={6}>\r\n              <InputGroup className='mb-4'>\r\n                <TextField\r\n                onChange={props.handleChange}\r\n                id='street'\r\n                type='text'\r\n                label='Street'\r\n                className=''\r\n                value={props.data.street}\r\n                variant='outlined'\r\n                InputLabelProps={{\r\n                    shrink: true\r\n                }}\r\n                size='small'\r\n                fullWidth={true}\r\n                />\r\n              </InputGroup>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={props.handleChange}\r\n                  id='unitNo'\r\n                  type='text'\r\n                  label='Unit No'\r\n                  className=''\r\n                  value={props.data.unitNo}\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={props.handleChange}\r\n                  id='city'\r\n                  type='text'\r\n                  label='City'\r\n                  className=''\r\n                  value={props.data.city}\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={props.handleChange}\r\n                  id='province'\r\n                  type='text'\r\n                  label='Province'\r\n                  className=''\r\n                  value={props.data.province}\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={props.handleChange}\r\n                  id='country'\r\n                  type='text'\r\n                  label='Country'\r\n                  className=''\r\n                  value={props.data.country}\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <InputGroup className='mb-4'>\r\n                  <TextField\r\n                  onChange={props.handleChange}\r\n                  id='postalCode'\r\n                  type='text'\r\n                  label='PostalCode'\r\n                  className=''\r\n                  value={props.data.postalCode}\r\n                  variant='outlined'\r\n                  InputLabelProps={{\r\n                      shrink: true\r\n                  }}\r\n                  size='small'\r\n                  fullWidth={true}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12}>\r\n                <Button\r\n                    type='submit'\r\n                    size='large'\r\n                    className='float-right'\r\n                    variant='contained'\r\n                    color='primary'\r\n                    >\r\n                    Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BusinessInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { getPlayer, addPlayer, updatePlayer, deletePlayer } from '../../../../crud/player.crud';\r\nimport TableModal from '../../../../partials/shared/Modal';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport PlayerInput from './PlayerInput';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst PlayerViewComponent = () => {\r\n  const [state, setState] = useState(0);\r\n  \r\n  const initialInput = {\r\n    _id: '',\r\n    firstName: '',\r\n    middleName: '',\r\n    lastName: '',\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    phone: '',\r\n    balance: '',\r\n    currency: 'USD',\r\n    affiliate: '',\r\n    street: '',\r\n    unitNo: '',\r\n    city: '',\r\n    province: '',\r\n    country: '',\r\n    postalCode: ''\r\n  };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  const notify = data => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n    const response = await getPlayer();\r\n    let data = [];\r\n    response.data.data.map(o => (o.active === true ? data.push(o) : null));\r\n    setState({\r\n        columns: [\r\n            { title: 'First name', field: 'name',\r\n                render: rowData => rowData.name.firstName\r\n            },\r\n            { title: 'Last name', field: 'name',\r\n              render: rowData => rowData.name.lastName\r\n            },\r\n            { title: 'Email', field: 'email' },\r\n            { title: 'Phone', field: 'phone' },\r\n            { title: 'Balance', field: 'balance' },\r\n            { title: 'Currency', field: 'currency' },\r\n          {\r\n            title: 'Action',\r\n            field: 'actions',\r\n            width: 200,\r\n            render: data => {\r\n              return (\r\n                <Row>\r\n                  <Col>\r\n                  <Link to={`/players/${data._id}`}>\r\n                    <Button\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      title={data._id}\r\n                    >\r\n                      Details\r\n                    </Button>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      variant='contained'\r\n                      onClick={() => delPlayer(data._id)}\r\n                    >\r\n                      DELETE\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            }\r\n          }\r\n        ],\r\n        data: data\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id ? e.target.id : e.target.name]: e.target.value\r\n    });\r\n    console.log(input)\r\n  };\r\n\r\n  const handleSubmitBusiness = async e => {\r\n    e.preventDefault();\r\n\r\n    let obj = {\r\n      _id: input._id,\r\n      name: {\r\n          firstName: input.firstName,\r\n          middleName: input.middleName,\r\n          lastName: input.lastName\r\n      },\r\n      email: input.email,\r\n      password: input.password,\r\n      username: input.username,\r\n      phone: input.phone,\r\n      balance: input.balance,\r\n      currency: input.currency,\r\n      affiliate : input.affiliate,\r\n      address: {\r\n        street: input.street,\r\n        unitNo: input.unitNo,\r\n        city: input.city,\r\n        province: input.province,\r\n        country: input.country,\r\n        postalCode: input.postalCode\r\n      }\r\n  }\r\n\r\n    if (isUpdate) {\r\n      try {\r\n        await updatePlayer(obj);\r\n        notify({ success: true, message: 'Success updating player.' });\r\n      } catch (error) {}\r\n    }\r\n    if (!isUpdate) {\r\n      try {\r\n        delete obj._id\r\n        await addPlayer(obj);\r\n        notify({ success: true, message: 'Success adding player.' });\r\n      } catch (error) {}\r\n    }\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const upPlayer = data => {\r\n    setInput({\r\n        _id : data._id,\r\n        firstName: data.name.firstName,\r\n        middleName: data.name.middleName,\r\n        lastName: data.name.lastName,\r\n        email: data.email,\r\n        username: data.username,\r\n        password: data.password,\r\n        phone: data.phone,\r\n        balance: data.balance,\r\n        currency: data.currency,\r\n        affiliate: data.affiliate,\r\n        street: data.address.street,\r\n        unitNo: data.address.unitNo,\r\n        city: data.address.city,\r\n        province: data.address.province,\r\n        country: data.address.country,\r\n        postalCode: data.address.postalCode\r\n    });\r\n    // setIsModalOpen(true);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const delPlayer = async id => {\r\n    await deletePlayer(id);\r\n    notify({ success: false, message: 'deleted player.' });\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <ToastContainer />\r\n\r\n      <TableModal\r\n        type='player'\r\n        title='Player'\r\n        open={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <PlayerInput\r\n          data={input}\r\n          handleChange={handleChange}\r\n          handleSubmit={handleSubmitBusiness}\r\n        />\r\n      </TableModal>\r\n\r\n    \r\n\r\n      {state.data ? (\r\n        <>\r\n          <Button\r\n            className='mb-2'\r\n            variant='contained'\r\n            color='primary'\r\n            size='large'\r\n            onClick={() => {\r\n              setIsModalOpen(true);\r\n              setIsUpdate(false);\r\n              setInput(initialInput);\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n          <MaterialTable\r\n            title='Business'\r\n            columns={state.columns}\r\n            data={state.data}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div align='center'>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlayerViewComponent;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport PlayerDetailComponent from './components/PlayerDetailComponent';\r\nimport PlayerViewComponent from './components/PlayerViewComponent';\r\n\r\nexport default function PlayerComponent() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/players\"/>\r\n            <Route path=\"/players/:id\" component={PlayerDetailComponent} />\r\n            <Route path=\"/players\" component={PlayerViewComponent} />\r\n        </Switch>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\nexport const PLAYER = 'api/players';\r\n\r\nexport function getPlayer(email, password) {\r\n  return axios.get(`${API_URL}/${PLAYER}`);\r\n}\r\n\r\nexport function getPlayerById(id){\r\n    return axios.get(`${API_URL}/${PLAYER}/${id}`);\r\n}\r\n\r\nexport function getPlayerByAffiliate(id){\r\n    return axios.get(`${API_URL}/${PLAYER}/affiliate/${id}`);\r\n}\r\n\r\nexport function addPlayer(player) {\r\n    return axios.post(`${API_URL}/${PLAYER}/admin`, { player });\r\n}\r\n\r\nexport function updatePlayer(player){\r\n    return axios.patch(`${API_URL}/${PLAYER}`, { player });\r\n}\r\n\r\nexport function deletePlayer(id){\r\n    return axios.delete(`${API_URL}/${PLAYER}/${id}`);\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\nexport const PLAYER = 'api/bet';\r\n\r\nexport function getBet() {\r\n  return axios.get(`${API_URL}/${PLAYER}`);\r\n}\r\n\r\nexport function getBetByPlayer(id) {\r\n  return axios.get(`${API_URL}/${PLAYER}/${id}`);\r\n}\r\n\r\n// export function addPlayer(player) {\r\n//     return axios.post(`${API_URL}/${PLAYER}`, { player });\r\n// }\r\n\r\n// export function updatePlayer(player){\r\n//     return axios.patch(`${API_URL}/${PLAYER}`, { player });\r\n// }\r\n\r\n// export function deletePlayer(id){\r\n//     return axios.delete(`${API_URL}/${PLAYER}/${id}`);\r\n// }\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst ModalTable = props => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        dialogClassName='modal-90w'\r\n        show={props.open}\r\n        onHide={props.handleClose}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.children}</Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalTable;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;"],"sourceRoot":""}