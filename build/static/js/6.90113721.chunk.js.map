{"version":3,"sources":["app/pages/home/affiliate/components/AffiliateViewComponent.js","app/pages/home/affiliate/components/AffiliateDetailComponent.js","app/pages/home/affiliate/AffiliateComponent.js","app/crud/player.crud.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js"],"names":["leads","AffiliateViewComponent","useState","state","setState","reRender","useEffect","a","getPlayer","response","data","map","o","active","push","columns","title","field","render","rowData","getLeadSource","affiliate","name","firstName","lastName","width","Row","Col","to","Button","variant","color","_id","fetchData","id","find","item","parseInt","leadSourceName","Container","fluid","align","CircularProgress","props","playerName","balance","betAmount","WinAmount","LoseAmount","betTable","getPlayerByAffiliate","match","params","AffiliateComponent","exact","from","path","component","AffiliateDetailComponent","API_URL","process","PLAYER","email","password","axios","get","getPlayerById","addPlayer","player","post","updatePlayer","patch","deletePlayer","delete","forwardRef","ref","bsPrefix","noGutters","_props$as","as","Component","className","otherProps","decoratedBsPrefix","createElement","defaultProps","DEVICE_SIZES","_ref","_ref$as","prefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","length","apply","concat","displayName"],"mappings":"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","file":"static/js/6.90113721.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { getPlayer } from '../../../../crud/player.crud';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst leads = [\r\n    {\r\n      \"id\": 1,\r\n      \"leadSourceName\": \"Lead 1\",\r\n      \"leadStatusName\": \"Lead 1\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"leadSourceName\": \"Lead 2\",\r\n        \"leadStatusName\": \"Lead 2\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"leadSourceName\": \"Lead 3\",\r\n        \"leadStatusName\": \"Lead 3\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"leadSourceName\": \"Lead 4\",\r\n        \"leadStatusName\": \"Lead 5\"\r\n    }\r\n];\r\n\r\nconst AffiliateViewComponent = () => {\r\n  const [state, setState] = useState(0);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n    const response = await getPlayer();\r\n    let data = [];\r\n    response.data.data.map(o => (o.active === true ? data.push(o) : null));\r\n    setState({\r\n        columns: [\r\n            { title: 'Affiliate', field: 'affiliate',\r\n                render: rowData => getLeadSource(rowData.affiliate)\r\n            },\r\n            { title: 'First name', field: 'name',\r\n                render: rowData => rowData.name.firstName\r\n            },\r\n            { title: 'Last name', field: 'name',\r\n                render: rowData => rowData.name.lastName\r\n            },\r\n            { title: 'Balance', field: 'balance' },\r\n            { title: 'Currency', field: 'currency' },\r\n            { title: 'Currency', field: 'currency' },\r\n            {\r\n                title: 'Action',\r\n                field: 'actions',\r\n                width: 200,\r\n                render: data => {\r\n                  return (\r\n                    <Row>\r\n                      <Col>\r\n                      <Link to={`/affiliate/${data.affiliate}`}>\r\n                        <Button\r\n                          variant='contained'\r\n                          color='secondary'\r\n                          title={data._id}\r\n                        >\r\n                          Details\r\n                        </Button>\r\n                        </Link>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                }\r\n              }\r\n            ],\r\n        data: data\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n\r\n  const getLeadSource = id => {\r\n    if (id){\r\n      const lead = leads.find(item => item.id === parseInt(id));\r\n      return lead.leadSourceName;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <ToastContainer />\r\n      {state.data ? (\r\n        <>\r\n          <MaterialTable\r\n            title='Business'\r\n            columns={state.columns}\r\n            data={state.data}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div align='center'>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AffiliateViewComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { getPlayerByAffiliate } from '../../../../crud/player.crud';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst leads = [\r\n    {\r\n      \"id\": 1,\r\n      \"leadSourceName\": \"Lead 1\",\r\n      \"leadStatusName\": \"Lead 1\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"leadSourceName\": \"Lead 2\",\r\n        \"leadStatusName\": \"Lead 2\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"leadSourceName\": \"Lead 3\",\r\n        \"leadStatusName\": \"Lead 3\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"leadSourceName\": \"Lead 4\",\r\n        \"leadStatusName\": \"Lead 5\"\r\n    }\r\n];\r\n\r\nconst AffiliateViewComponent = (props) => {\r\n  const [state, setState] = useState(0);\r\n\r\n  const initialInput = {\r\n    _id: '',\r\n    playerName: '',\r\n    balance: '',\r\n    betAmount: '',\r\n    WinAmount: '',\r\n    LoseAmount: '',\r\n    betTable: '',\r\n    data: ''\r\n  };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [input, setInput] = useState(initialInput);\r\n  const [reRender, setRerender] = useState(false); // Re render table after updating\r\n\r\n  const notify = data => {\r\n    if (data.success) {\r\n      toast.success(data.message);\r\n    } else {\r\n      toast.error(data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n    const response = await getPlayerByAffiliate(props.match.params.id);\r\n    let data = [];\r\n    response.data.data.map(o => (o.active === true ? data.push(o) : null));\r\n    setState({\r\n        columns: [\r\n            { title: 'Affiliate', field: 'affiliate',\r\n                render: rowData => getLeadSource(rowData.affiliate)\r\n            },\r\n            { title: 'First name', field: 'name',\r\n                render: rowData => rowData.name.firstName\r\n            },\r\n            { title: 'Last name', field: 'name',\r\n                render: rowData => rowData.name.lastName\r\n            },\r\n            { title: 'Balance', field: 'balance' },\r\n            { title: 'Currency', field: 'currency' },\r\n            { title: 'Currency', field: 'currency' }\r\n            ],\r\n        data: data\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [reRender]);\r\n\r\n\r\n  const getLeadSource = id => {\r\n    const lead = leads.find(item => item.id === parseInt(id));\r\n    return lead.leadSourceName;\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmitBusiness = async e => {\r\n    e.preventDefault();\r\n    if (isUpdate) {\r\n      try {\r\n        let obj = {\r\n            _id: input._id,\r\n            name: {\r\n                firstName: input.firstName,\r\n                middleName: input.middleName,\r\n                lastName: input.lastName\r\n            },\r\n            email: input.email,\r\n            username: input.username,\r\n            phone: input.phone,\r\n            balance: input.balance,\r\n            currency: input.currency\r\n        };\r\n        // await updatePlayer(obj);\r\n        notify({ success: true, message: 'Success updating business.' });\r\n      } catch (error) {}\r\n    }\r\n    if (!isUpdate) {\r\n      try {\r\n        let obj = {\r\n            name: {\r\n                firstName: input.firstName,\r\n                middleName: input.middleName,\r\n                lastName: input.lastName\r\n            },\r\n            email: input.email,\r\n            username: input.username,\r\n            phone: input.phone,\r\n            balance: input.balance,\r\n            currency: input.currency\r\n        };\r\n        // await addPlayer(obj);\r\n        notify({ success: true, message: 'Success adding business.' });\r\n      } catch (error) {}\r\n    }\r\n    setIsModalOpen(false);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const upPlayer = data => {\r\n    setInput({\r\n        _id : data._id,\r\n        firstName: data.name.firstName,\r\n        middleName: data.name.middleName,\r\n        lastName: data.name.lastName,\r\n        email: data.email,\r\n        username: data.username,\r\n        phone: data.phone,\r\n        balance: data.balance,\r\n        currency: data.currency\r\n    });\r\n    setIsModalOpen(true);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const delPlayer = async id => {\r\n    // await deletePlayer(id);\r\n    setRerender(!reRender);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <ToastContainer />\r\n\r\n      {state.data ? (\r\n        <>\r\n          <MaterialTable\r\n            title='Business'\r\n            columns={state.columns}\r\n            data={state.data}\r\n          />\r\n        </>\r\n      ) : (\r\n        <div align='center'>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AffiliateViewComponent;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport AffiliateViewComponent from './components/AffiliateViewComponent';\r\nimport AffiliateDetailComponent from './components/AffiliateDetailComponent';\r\n\r\nexport default function AffiliateComponent() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact={true} from=\"/\" to=\"/affiliate\"/>\r\n            <Route path=\"/affiliate/:id\" component={AffiliateDetailComponent} />\r\n            <Route path=\"/affiliate\" component={AffiliateViewComponent} />\r\n        </Switch>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL;\r\nexport const PLAYER = 'api/players';\r\n\r\nexport function getPlayer(email, password) {\r\n  return axios.get(`${API_URL}/${PLAYER}`);\r\n}\r\n\r\nexport function getPlayerById(id){\r\n    return axios.get(`${API_URL}/${PLAYER}/${id}`);\r\n}\r\n\r\nexport function getPlayerByAffiliate(id){\r\n    return axios.get(`${API_URL}/${PLAYER}/affiliate/${id}`);\r\n}\r\n\r\nexport function addPlayer(player) {\r\n    return axios.post(`${API_URL}/${PLAYER}/admin`, { player });\r\n}\r\n\r\nexport function updatePlayer(player){\r\n    return axios.patch(`${API_URL}/${PLAYER}`, { player });\r\n}\r\n\r\nexport function deletePlayer(id){\r\n    return axios.delete(`${API_URL}/${PLAYER}/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;"],"sourceRoot":""}